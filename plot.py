# -*- coding: utf-8 -*-
import matplotlib.pyplot as plt
#learningRate
x1=[0,0.001,0.0015,0.002,0.003,0.004,0.005,0.006,0.008,0.01,0.03,0.05,0.08,0.1]
#x1_1=[1.5,1.1,0.9,0.4,0.1,0.07,0.05,0.03,0.01,0.007,0.003,0.002,0.0015,0.001,0]
tr_ks_learningRate=[0,1.0,]
val_ks_learningRate=[0,1.0,]
#tr_ks_learningRate=[0,1.0,0.985,0.883,0.740,0.672,0.658,0.646,0.611,0.590,0.518,0.487,0.449,0.441]
#val_ks_learningRate=[0,1.0,0.984,0.934,0.857,0.742,0.670,0.639,0.606,0.574,0.507,0.305,0.467,0.343]
#tr_ks_learningRate=[0,1.0,0.999,0.977,0.918,0.877,0.756,0.680,0.657,0.623,0.538,0.518,0.484,0.467]
#val_ks_learningRate=[0,1.0,1.0,0.980,0.941,0.922,0.840,0.732,0.657,0.614,0.554,0.508,0.455,0.480]
#tr_ks_learningRate=[0,1.0,0.991,0.938,0.869,0.769,0.682,0.666,0.653,0.646,0.623,0.528,0.493,0.459,0.440]
#val_ks_learningRate=[0,1.0,0.988,0.949,0.916,0.833,0.727,0.656,0.629,0.609,0.595,0.455,0.416,0.299,0.258]
#tr_ks_learningRate=[0,0.987,0.876,0.773,0.698,0.685,0.674,0.662,0.637,0.511]
#val_ks_learningRate=[0,0.976,0.867,0.755,0.639,0.535,0.524,0.514,0.480,0.379]
#tr_ks_learningRate=[0,]
#val_ks_learningRate=[0,]
#tr_ks_learningRate=[0,1,0.99,0.924,0.726,0.687,0.493,0.393,0.29,0.197,0.186,0.1547]
#val_ks_learningRate=[0,1,0.983,0.973,0.885,0.854,0.611,0.575,0.186,0.403,0.094,0.274]
#tr_ks_learningRate=[0,1,0.987,0.935,0.837,0.693,0.640,0.455,0.377,0.329,0.301,0.228,0.178,0.193,0.158]
#val_ks_learningRate=[0,1,0.976,0.958,0.915,0.795,0.694,0.332,0.496,0.185,0.163,0.117,0.344,0.174,0.089]
#tr_ks_learningRate=[0.9147,0.7144,0.57568,0.39122,0.2246,0.2102,0.1381,0.1298,0.12651,0.1047,0.1205,0.1056,0.1043,0.0742,0]
#val_ks_learningRate=[0.77933,0.712,0.6078,0.5261,0.2479,0.2301,0.1393,0.1525,0.083,0.1344,0.1026,0.1104,0.1868,0.03861,0]

#maxDepth
#原则还是尽可能的使用特征吧！树的深度尽量深！但是要满足完全生长二叉树的2^k-1的公式啊！
x2=[2,3,4,5,6,7,8,9,10,12]
tr_ks_maxDepth=[]
val_ks_maxDepth=[]
#tr_ks_maxDepth=[1.0,1.0,0.9996,0.99442,0.989,0.987,0.985,0.985,0.989,0.993]
#val_ks_maxDepth=[1.0,1.0,1.0,0.99357,0.991,0.986,0.984,0.977,0.966,0.941]
#tr_ks_maxDepth=[1.0,1.0,0.995,0.995,0.986,0.977,0.971,0.969,0.976,0.990]
#val_ks_maxDepth=[1.0,1.0,0.990,0.990,0.989,0.980,0.968,0.961,0.944,0.930]
#tr_ks_maxDepth=[0.99,0.991,0.959,0.920,0.902,0.891,0.869,0.852,0.841,0.888]
#val_ks_maxDepth=[0.986,0.986,0.964,0.938,0.939,0.931,0.914,0.903,0.880,0.851]
#tr_ks_maxDepth=[1.0,0.991,0.990,0.978,0.925,0.902,0.876,0.860,0.830,0.832]
#val_ks_maxDepth=[1.0,0.981,0.978,0.952,0.897,0.886,0.866,0.844,0.813,0.777]
#tr_ks_maxDepth=[]
#val_ks_maxDepth=[]
#tr_ks_maxDepth=[0.999,0.980,0.962,0.965,0.968,0.951,0.942,0.924,0.923,0.923,0.954,0.961,0.989]
#val_ks_maxDepth=[0.999,0.985,0.98,0.982,0.973,0.978,0.974,0.973,0.953,0.918,0.937,0.844,0.542]
#tr_ks_maxDepth=[0.954,0.955,0.946,0.944,0.935,0.935,0.931,0.942,0.958,0.966,0.979,0.995,0.998]
#val_ks_maxDepth=[0.970,0.970,0.964,0.963,0.959,0.953,0.941,0.912,0.873,0.897,0.7716,0.683,0.578]
#tr_ks_maxDepth=[0.866,0.8084,0.7050,0.6528,0.715,0.7841,0.842,0.934,0.97]
#val_ks_maxDepth=[0.906,0.8982,0.857,0.7612,0.714,0.7082,0.655,0.5942,0.548]

#n_Estimators
x3=[180,190,200,210,225,250,275,280,285,290,300,400]
tr_ks_nE=[]
val_ks_nE=[]
#tr_ks_nE=[1.0,1.0,1.0,1.0,0.999,0.995,0.987,0.985,0.982,0.975,0.968,0.863]
#val_ks_nE=[1.0,1.0,0.999,0.998,0.997,0.994,0.986,0.984,0.981,0.981,0.978,0.922]
#tr_ks_nE=[0.9960,0.994,0.990,0.985,0.980,0.977,0.976,0.974,0.971,0.968,0.963,0.9581,0.935,0.927,0.922,0.894]
#val_ks_nE=[0.9958,0.990,0.989,0.988,0.983,0.980,0.978,0.975,0.973,0.969,0.964,0.9576,0.947,0.945,0.944,0.935]
#tr_ks_nE=[0.976,0.925,0.909,0.902,0.896,0.891,0.883,0.879,0.830]
#val_ks_nE=[0.985,0.945,0.941,0.940,0.936,0.931,0.930,0.923,0.885]
#tr_ks_nE=[0.949,0.940,0.929,0.914,0.902,0.895,0.887,0.836]
#val_ks_nE=[0.934,0.928,0.919,0.902,0.886,0.878,0.873,0.817]
#tr_ks_nE=[]
#val_ks_nE=[]
#tr_ks_nE=[1,1,0.997,0.993,0.981,0.971,0.968,0.95,0.917,0.874,0.832,]
#val_ks_nE=[1,1,0.999,0.991,0.985,0.981,0.978,0.975,0.969,0.938,0.923]
#tr_ks_nE=[1,1,0.997,0.994,0.988,0.949,0.928,0.897,0.817,0.789,0.760,0.68]
#val_ks_nE=[1,1,0.981,0.976,0.956,0.942,0.937,0.930,0.913,0.902,0.895,0.86]
#tr_ks_nE=[1,0.995,0.9676,0.9,0.8,0.73,0.7150,0.687]
#val_ks_nE=[1,0.94,0.8471,0.77,0.74,0.719,0.717,0.676]

#plot
ax1=plt.subplot(2,2,1)
#1
ax1.plot(x1,tr_ks_learningRate,c='b')
ax1.plot(x1,val_ks_learningRate,c='r')
#ax1.xticks(x1)
#2
ax2=plt.subplot(2,2,2)
ax2.plot(x2,tr_ks_maxDepth,c='g')
ax2.plot(x2,val_ks_maxDepth,c='r')
#ax2.xticks(x2)
#3
ax3=plt.subplot(2,2,3)
ax3.plot(x3,tr_ks_nE,c='y')
ax3.plot(x3,val_ks_nE,c='r')
#ax3.xticks(x3)
#show()
plt.show()